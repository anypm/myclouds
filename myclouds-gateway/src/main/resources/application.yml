server:
  port: 8080
  servlet:
    context-path: /
    
spring:
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  redis:
    host: ${redis-host}
    port: ${redis-port}
    password: ${redis-password}
    jedis:
      pool:
        min-idle: 10
        max-idle: 50
        max-wait: -1
        max-active: 200
  cloud:
    consul:
      enabled: true
      host: ${consul-host:127.0.0.1}
      port: ${consul-port:8500}
      discovery:
        register: true
        prefer-ip-address: true
        #hostname: ${spring.cloud.client.ip_address}
        health-check-path: ${management.server.servlet.context-path}/health
        health-check-interval: 10s
    gateway:
      routes:
      - id: system-route
        uri: lb://myclouds-system-service  # 服务中心的实例名；lb(load balance)启用客户端负载均衡
        predicates:
        - Path=/admin/system/**
        filters:
        - name: RequestRateLimiter
          args:
            key-resolver: '#{@globalKeyResolver}'  # 动态获取服务实例进行以服务为单位的全局限流配置，@see GlobalKeyResolver.solve()
            redis-rate-limiter.replenishRate: 5000
            redis-rate-limiter.burstCapacity: 5000
#        - name: Hystrix  # 熔断Filter
#          args:
#            name: systemFallbackCommand
#            fallbackUri: forward:/fallback/default   # 降级处理
      globalcors: 
        corsConfigurations: 
          '[/**]':
            # allowedOrigins: "http://127.0.0.1:8848"
            allowedOrigins: "*"
            maxAge: 86400
            allowedHeaders: "Content-Type"
            allowedMethods: "GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS, TRACE"
      
management:
  endpoint:
    health:
      enabled: true
    metrics:
      enabled: true
  server:
    servlet:
      context-path: /actuator
      
# 断路器超时时间，缺省是1000ms ，default全局有效，filter-name指定应用有效
# 实测：网关上面的hystrix效果并不理想，jmeter并发测试，调用未超时也会进入fallback。@see https://github.com/spring-cloud/spring-cloud-gateway/issues/1035
# hystrix.command.systemFallbackCommand.execution.isolation.thread.timeoutInMilliseconds: 15000